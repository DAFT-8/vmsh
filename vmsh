#!/bin/bash -e

[ ! -d /sys/firmware/efi ] && echo "System not booted in UEFI mode." && exit 1

command -v qemu-system-x86_64 > /dev/null 2>&1 || { echo >&2 "I require qemu-system-x86_64 but it's not installed. Install it. Aborting."; exit 1; }
command -v qemu-img > /dev/null 2>&1 || { echo >&2 "I require qemu-img but it's not installed. Install it. Aborting."; exit 1; }
qemu-system-x86_64 -display sdl -version >/dev/null 2>&1 || { echo "I require qemu-ui-sdl but it's not installed. Install it. Aborting."; exit 1; }

usage() {
  echo "Usage: $0 IMAGE"
  echo "Example: $0 /path/to/image.{img,iso,qcow2}"
  exit 1
}

if [ "$#" -ne 1 ]; then
  usage
fi

IMAGE="$1"

if [[ "$IMAGE" == *".img" ]] && [[ -f "$IMAGE" ]]; then
  qemu-system-x86_64 -m 2048 -smp 4 -cpu host -enable-kvm -net nic -net user -audiodev sdl,id=snd0 -device ich9-intel-hda -device hda-output,audiodev=snd0 -display sdl,gl=on,window-close=on  -hda "${IMAGE}" -bios /usr/share/ovmf/x64/OVMF.4m.fd &
elif [[ "$IMAGE" == *".iso" ]] && [[ -f "$IMAGE" ]]; then
  read -p "Enter name for image file (e.g. Arch): " IMAGE_NAME
  read -p "Enter disk size (default: 20G): " DISK && [ ! "$DISK" ] && DISK="20G"
  mkdir -p ./data
  qemu-img create -f qcow2 "./data/${IMAGE_NAME}.img" "$DISK"
 qemu-system-x86_64 -boot d -cdrom "${IMAGE}" -m 2048 -smp 4 -cpu host -enable-kvm -net nic -net user -audiodev sdl,id=snd0 -device ich9-intel-hda -device hda-output,audiodev=snd0 -display sdl,gl=on,window-close=on -hda "./data/${IMAGE_NAME}.img" -bios /usr/share/ovmf/x64/OVMF.4m.fd &
elif [[ "$IMAGE" == *".qcow2" ]] && [[ -f "$IMAGE" ]]; then
  qemu-system-x86_64 -m 2048 -smp 4 -cpu host -enable-kvm -net nic -net user  -audiodev sdl,id=snd0 -device ich9-intel-hda -device hda-output,audiodev=snd0 -display sdl,gl=on,window-close=on -hda "${IMAGE}" &
else
  usage
fi
